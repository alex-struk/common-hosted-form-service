definition:
  openapi: 3.0.0
  info:
    title: Common Hosted Form Service (CHEFS)
    description: The API for an application for teams to create, manage and publish web forms. These back-end operations can work for different form builder tools that define the form as a json schema. Form management features include role-based access for administrators, form versioning, submission review and export, as well as notifications, document generation and reporting.
    contact:
      name: Forminators
      email: submit.digital@gov.bc.ca
    license:
      name: Apache 2.0
      url: https://www.apache.org/licenses/LICENSE-2.0.html
    version: 1.0
  components:
    responses:
      NotFound:
        description: Not Found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotFoundError'
      ResourceNotFound:
        description: Resource Not Found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceNotFoundError'
      Forbidden:
        description: Forbidden
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForbiddenError'
      NoFormAccess:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoFormAccessError'
      UnprocessableEntityDB:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnprocessableEntityDBError'
    schemas:
      Error:
        type: object
        properties:
          code:
            type: string
          message:
            type: string
        required:
          - code
          - message
      ResourceNotFoundError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Sorry... we still haven't found what you're looking for :(
              status:
                example: 404
              title:
                example: Not Found
              type:
                example: https://httpstatuses.com/404
      UnprocessableEntityDBError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Sorry... we still haven't found what you're looking for :(
              status:
                example: 422
              error:
                example: {}
              title:
                example: Unprocessable Entity
              type:
                example: https://httpstatuses.com/422
      RoleRequiredValidationError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Validation Error
              error:
                example:
                  {
                    'role': [{ 'message': "must have required property 'role'", 'keyword': 'required', 'params': { 'missingProperty': 'role' } }],
                    'owner': [{ 'message': 'must NOT have additional properties', 'keyword': 'additionalProperties', 'params': { 'additionalProperty': 'owner' } }]
                  }
              status:
                example: 422
              title:
                example: Validation Error
              type:
                example: https://httpstatuses.com/422
      PropertyRequiredValidationError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Validation Error
              error:
                example: { 'propertyName': [{ 'message': "must have required property 'propertyName'", 'keyword': 'required', 'params': { 'missingProperty': 'propertyName' } }] }
              status:
                example: 422
              title:
                example: Validation Error
              type:
                example: https://httpstatuses.com/422
      NotFoundError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: The specified resource was not found
              error:
                example: {}
              status:
                example: 404
              title:
                example: Not Found
              type:
                example: https://httpstatuses.com/404
      ForbiddenError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Authorization token is invalid.
              error:
                example: {}
              status:
                example: 403
              title:
                example: Forbidden
              type:
                example: https://httpstatuses.com/403
      UserAndFormIdequiredError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Must supply userId and formId
              status:
                example: 422
              error:
                example: {}
              title:
                example: Unprocessable Entity
              type:
                example: https://httpstatuses.com/422
      NoFormAccessError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Current user has no access to form.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      UserNotFoundError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Current user not found on request.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      FormIdNotFoundError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Form Id not found on request.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      NoRequiredFormPermissionError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Current user does not have required permission(s) on form.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      UpdateRolePermissionError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: You do not have permission to update this role.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      UpdateOwnerRolePermissionError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: You can not update an owner's roles.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      SubmissionIdNotFoundError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Submission Id (s) not found on request.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      SubmissionAccessError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: You do not have access to this submission.
              error:
                example: {}
              status:
                example: 401
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      InvalidSubmissionIdError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Invalid submissionId(s) in the submissionIds list.
              error:
                example: {}
              status:
                example: 401
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      RequiredSubmissionPermissionError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Current user does not have required permission(s) for some submissions in the submissionIds list.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      InvalidAuthError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Invalid authorization credentials.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      SubmissionDeletePermissionError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: Current user does not have required permission(s) for to delete submissions.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      UpdateOwnerError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: You can not update an owner's roles.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      RemoveFormDesignerRoleError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: You can't remove a form designer role.
              status:
                example:
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      UpdateOwnerRoleError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: You can't update an owner's roles.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      AddOwnerRoleError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: You can't add an owner role.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      UserIdNotFoundError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: User Id not found on request.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      RemoveTeamManagerRoleError:
        allOf:
          - $ref: '#/components/schemas/Problem'
          - type: object
            properties:
              detail:
                example: You can't remove your own team manager role.
              status:
                example: 401
              error:
                example: {}
              title:
                example: Unauthorized
              type:
                example: https://httpstatuses.com/401
      Problem:
        required:
          - type
          - title
          - status
          - detail
          - error
        properties:
          type:
            type: string
            description: What type of problem, link to explanation of problem
          title:
            type: string
            description: Title of problem, generally the Http Status Code description
          status:
            type: string
            description: The Http Status code
          detail:
            type: string
            description: short description of why this problem was raised.
          error:
            type: object
            description: description of the error that was raised
    securitySchemes:
      openId:
        type: openIdConnect
        openIdConnectUrl: ~
      basicAuth:
        type: http
        scheme: basic
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
  externalDocs:
    description: Project Readmes
    url: https://github.com/bcgov/common-hosted-form-service
  servers:
    - url: /api/v1
      description: This Server
  security:
    - bearerAuth: []
      openId: []

apis:
  - ./src/forms/admin/routes.js
  - ./src/forms/bcgeoaddress/routes.js
  - ./src/forms/file/routes.js
  - ./src/forms/form/routes.js
  - ./src/forms/permission/routes.js
  - ./src/forms/public/routes.js
  - ./src/forms/rbac/routes.js
  - ./src/forms/role/routes.js
  - ./src/forms/submission/routes.js
  - ./src/forms/user/routes.js
  - ./src/forms/utils/routes.js
